swagger: "2.0"
info:
  version: "0.0.1"
  title: Piece-Meal App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /clients:
    # our controller name
    x-swagger-router-controller: clients
    get:
      description: This endpoint returns all clients available in the database
      # define the type of response for Success "200" and Error
      operationId: getClients
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: Add a new client
      operationId: addClient
      # movie info to be stored
      parameters:
        - name: client
          in: body
          description: client object
          required: true
          schema:
            $ref: "#/definitions/NewClient"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /clients/{user_id}:
    # our controller name
    x-swagger-router-controller: clients
    get:
      description: Retrieve a single client by id
      operationId: getClient
      # define the type of response for Success "200" and Error
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: Update a client by id
      operationId: updateClient
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: client
          in: body
          description: client object
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a client
      # define the parameters
      operationId: deleteClient
      parameters:
        - name: user_id
          description: Client id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /clients/{user_id}/recipes:
    x-swagger-router-controller: recipes
    get:
      description: get a client's recipes
      operationId: getClientRecipes
      parameters:
        - name: user_id
          type: integer
          in: path
          description: user's id
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new recipe to the client's restrictions
      operationId: addClientRecipe
      parameters:
        - name: user_id
          type: integer
          in: path
          description: client's id
          required: true
        - name: recipe_id
          type: integer
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostUserRestrictionResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /clients/{user_id}/restrictions:
    x-swagger-router-controller: clients
    get:
      description: get a client's dietary restrictions
      # define the type of response for Success "200" and Error
      operationId: getRestrictions
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserRestrictionsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new ingredient to the client's restrictions
      operationId: addRestriction
      parameters:
        - name: user_id
          type: integer
          in: path
          description: client's id
          required: true
        - name: ingredient
          description: Request body
          in: body
          required: true
          schema:
            type: object
            required:
              - ingredient_id
            properties:
              ingredient_id:
                description: the ingredient to add
                type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    patch:
      description: add a new ingredient to the client's restrictions
      operationId: updateRestrictions
      parameters:
        - name: user_id
          type: integer
          in: path
          description: client's id
          required: true
        - name: ingredients
          in: body
          description: Json object informations.
          required: true
          schema:
            $ref: '#/definitions/IngredientIds'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a client's restriction
      operationId: deleteRestriction
      parameters:
        - name: user_id
          description: Client Id
          type: integer
          in: path
          required: true
        - name: ingredient
          description: Request body
          in: body
          required: true
          schema:
            type: object
            required:
              - ingredient_id
            properties:
              ingredient_id:
                description: the ingredient to delete
                type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients:
    x-swagger-router-controller: ingredients
    get:
      description: get the ingredients list
      # define the type of response for Success "200" and Error
      operationId: getIngredientsList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new ingredient to the list
      # movie info to be stored
      operationId: addIngredient
      parameters:
        - name: ingredient
          description: Ingredient
          in: body
          required: true
          schema:
            $ref: "#/definitions/Ingredient"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /recipes:
    x-swagger-router-controller: recipes
    get:
      description: get the recipes list
      operationId: getRecipesList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new recipe
      operationId: postRecipe
      parameters:
        - name: recipe
          description: Recipe
          in: body
          required: true
          schema:
            $ref: "#/definitions/Recipe"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostRecipeResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /recipes/{id}:
    x-swagger-router-controller: recipes
    get:
      description: get a recipe
      # define the type of response for Success "200" and Error
      operationId: getRecipe
      parameters:
        - name: id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Recipe"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: update a recipe
      # define the parameters
      operationId: updateRecipe
      parameters:
        - name: id
          description: recipe id
          type: integer
          in: path
          required: true
        - name: recipe
          description: recipe
          in: body
          required: true
          schema:
            $ref: "#/definitions/Recipe"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Recipe"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a recipe
      # define the parameters
      operationId: deleteRecipe
      parameters:
        - name: id
          description: recipe id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Recipe"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients/{id}:
    x-swagger-router-controller: ingredients
    get:
      description: get an ingredient
      # define the type of response for Success "200" and Error
      operationId: getIngredient
      parameters:
        - name: id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: update an ingredient
      # define the parameters
      operationId: updateIngredient
      parameters:
        - name: id
          description: Ingredient id
          type: integer
          in: path
          required: true
        - name: ingredient
          description: Ingredient
          in: body
          required: true
          schema:
            $ref: "#/definitions/PatchIngredient"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete an ingredient
      # define the parameters
      operationId: deleteIngredient
      parameters:
        - name: id
          description: Ingredient id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients/{id}/alternatives:
    x-swagger-router-controller: ingredients
    get:
      description: get alternatives for an ingredient
      # define the type of response for Success "200" and Error
      operationId: getIngredientAlternatives
      parameters:
        - name: id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientAlternativesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /search/clients:
    x-swagger-router-controller: clients
    get:
      description: get results from client search
      parameters:
        - name: first_name
          type: string
          in: query
          required: true
        - name: last_name
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersSearchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /search/ingredients:
    x-swagger-router-controller: ingredients
    get:
      description: get results from ingredient search
      parameters:
        - name: name
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientSearchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /search/recipes:
    x-swagger-router-controller: recipes
    get:
      description: get results from recipe search
      parameters:
        - name: name
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipeSearchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /clients/{user_id}/ingredients/{ingredient_id}/verify:
    x-swagger-router-controller: clients
    get:
      description: to check if an ingredient is safe for client
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: ingredient_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientVerifyResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /clients/{user_id}/recipes/{recipe_id}/crosscheck:
    x-swagger-router-controller: clients
    get:
      description: to find out what ingredients are safe and non-safe in an existing recipe
      operationId: crossCheckRecipe
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: recipe_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipeIngredientSafetyResponse"
        default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /clients/{user_id}/recipes/{recipe_id}/rating:
    x-swagger-router-controller: clients
    get:
      description: to get client's rating for a recipe
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: recipe_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserRecipeRatingResponse"
        default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
    post:
      description: to post/update client's rating
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: recipe_id
          in: path
          type: integer
          required: true
        - name: rating
          in: body
          schema:
            type: object
            required:
              - rating
            properties:
              rating:
                description: rating to post/update
                type: number

      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
              
  /token:
    x-swagger-router-controller: token
    post:
      description: get auth token
      operationId: postToken
      parameters:
        - name: credentials
          description: Client credentials
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                description: client's email address
                type: string
              password:
                description: client's password
                type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - id
              - email
              - token
            properties:
              id:
                description: client's user id
                type: number
              email:
                description: client's email address
                type: string
              token:
                description: client's auth token
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  

  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  IngredientIds:
    type: array
    items:
      type: integer

  NewClient:
    type: object
    required:
      - first_name
      - last_name
      - password
      - email
    properties:
      first_name:
        type: string
        description: client object first name
      last_name:
        type: string
        description: client object last name
      email:
        type: string
        description: client object email
      password:
        type: string
        description: client password

  Client:
    type: object
    required:
      - id
      - first_name
      - last_name
      # - password
      - email
    properties:
      first_name:
        type: string
        description: client object first name
      last_name:
        type: string
        description: client object last name
      email:
        type: string
        description: client object email
      # password:
      #   type: string
      #   description: client password
      id:
        type: integer
        description: client id

  PatchIngredient:
    type: object
    properties:
      name:
        type: string
        description: ingredient object name
      tags:
        type: array
        items:
          type: string
    required:
      - name

  Ingredient:
    type: object
    properties:
      id:
        type: number
        description: ingredient id
      name:
        type: string
        description: ingredient object name
      tags:
        type: array
        items:
          type: string
    required:
      - name

  GetUserResponse:
    type: object
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      recipes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            instructions:
              type: string

  GetUsersResponse:
    required:
      - clients
    properties:
      # The array of clients
      clients:
        type: array
        items:
          $ref: "#/definitions/Client"
        # type: array
        # items:
        #   type: object
        #   properties:
        #     id:
        #       type: integer
        #     first_name:
        #       type: string
        #     last_name:
        #       type: string
        #     email:
        #       type: string

  GetUsersSearchResponse:
    required:
      - clients
    properties:
      # The array of clients
      clients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            first_name:
              type: string
            last_name:
              type: string

  GetIngredientSearchResponse:
    required:
      - ingredients
    properties:
      # The array of ingredients
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            tags:
              type: array
              items:
                type: string

  GetRecipeSearchResponse:
    required:
      - recipes
    properties:
      # The array of recipes
      recipes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            tags:
              type: array
              items:
                type: string

  GetUserRestrictionsResponse:
    required:
      - ingredients
    properties:
      # The array of restricted ingredients
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

  PostUserRestrictionResponse:
    type: object
    properties:
      client:
        type: object
        properties:
            id:
              type: integer
            name:
              type: string
            restrictions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

  GetIngredientsListResponse:
    required:
      - ingredients
    properties:
      # The array of ingredients
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

  Recipe:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      instructions:
        type: string
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            tags:
              type: array
              items:
                type: string

  PostRecipeResponse:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      instructions:
        type: string
      ingredients:
        type: array
        items:
          type: integer

  GetRecipesListResponse:
    required:
      - recipes
    properties:
      recipes:
        type: array
        items:
          $ref: "#/definitions/Recipe"

  GetIngredientResponse:
    required:
      - id
      - name
      # - alternatives
      # - tags
    properties:
      id:
        type: integer
      name:
        type: string
      tags:
        type: array
        items:
          type: string
      calories:
        type: integer
      alternatives:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

  GetIngredientAlternativesResponse:
    required:
      - id
      - name
      - alternatives
    properties:
      id:
        type: number
      name:
        type: string
      alternatives:
        type: array
        items:
          $ref: "#/definitions/Ingredient"

  GetIngredientVerifyResponse:
    type: object
    required:
      - safe
    properties:
      safe:
        type: boolean
        description: "Check whether the ingredient is safe or not"
      alternatives:
        type: array
        description: "the alternatives for the ingredient, if it's not safe."
        items:
          $ref: "#/definitions/Ingredient"

  GetRecipeIngredientSafetyResponse:
    # type: string
    type: object
    properties:
      is_safe:
        type: boolean
      forbidden:
        type: array
        items:
          type: integer
          # type: object
          # properties:
          #   client_id:
          #     type: integer
          #   ingredient_id:
          #     type: integer

  GetUserRecipeRatingResponse:
    required:
      - rating
    properties:
      rating:
        type: number
        description: "User's rating for a recipe"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  GeneralResponse:
    type: object
    properties:
      success:
        type: integer
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description

  # IngredientResponse:
  #   type: object
  #   properties:
  #     success:
  #       type: integer
  #       description: returns 1 if successful
  #     description:
  #       type: object
  #       properties:
  #       description: a short comment
  #   required:
  #     - success
  #     - description
