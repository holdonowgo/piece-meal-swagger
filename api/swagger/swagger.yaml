swagger: "2.0"
info:
  version: "0.0.1"
  title: Piece-Meal App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: get all users
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new user
      operationId: addUser
      # movie info to be stored
      parameters:
        - name: user
          in: body
          description: user object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{user_id}:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: get a user
      # define the type of response for Success "200" and Error
      parameters:
        - name: user_id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      # define the parameters
      description: update user
      operationId: updateUser
      # movie info to be stored
      parameters:
        - name: user_id
          type: number
          in: path
          required: true
        - name: user
          in: body
          description: user object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a ingredient
      # define the parameters
      parameters:
        - name: user_id
          description: Ingredient id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{user_id}/restrictions:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: get a user's dietary restrictions
      # define the type of response for Success "200" and Error
      parameters:
        - name: user_id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserRestrictionsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new ingredient to the user's restrictions
      # movie info to be stored
      operationId: addRestriction
      # movie info to be stored
      parameters:
        - name: user_id
          type: number
          in: path
          description: user's id
          required: true
        - name: ingredient_id
          type: number
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a ingredient
      # define the parameters
      parameters:
        - name: user_id
          description: Ingredient id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients:
    # our controller name
    x-swagger-router-controller: ingredients
    get:
      description: get the ingredients list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new ingredient to the list
      # movie info to be stored
      parameters:
        - name: name
          description: Ingredient name
          in: body
          required: true
          schema:
            $ref: "#/definitions/Ingredient"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients/{id}:
    # our controller name
    x-swagger-router-controller: ingredients
    get:
      description: get an ingredient
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update an ingredient
      # define the parameters
      parameters:
        - name: id
          description: Ingredient id
          type: number
          in: path
          required: true
        - name: name
          description: Ingredient name
          in: body
          required: true
          schema:
            $ref: "#/definitions/Ingredient"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a ingredient
      # define the parameters
      parameters:
        - name: id
          description: Ingredient id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients/{id}/alternatives:
    # our controller name
    x-swagger-router-controller: ingredients
    get:
      description: get alternatives for an ingredient
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientAlternativesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            

  /search/users:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: get results from user search
      # define the type of response for Success "200" and Error
      parameters:
        - name: first_name
          type: string
          in: query
          required: true
        - name: last_name
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersSearchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  User:
    type: object
    required:
      - id
      - first_name
      - last_name
      - password
      - email
    properties:
      first_name:
        type: string
        description: user object first name
      last_name:
        type: string
        description: user object last name
      email:
        type: string
        description: user object email
      password:
        type: string
        description: user password
      id:
        type: number
        description: user id
      
  Ingredient:
    type: object
    properties:
      name:
        type: string
        description: ingredient object name
      id:
        type: number
        description: ingredient id
    required:
      - name
      
  GetUserResponse:
    required:
      - id
      - first_name
      - last_name
      - email
    properties:
      id:
        type: number
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
        
  GetUsersResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
              
  GetUsersSearchResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            first_name:
              type: string
            last_name:
              type: string
              
  GetUserRestrictionsResponse:
    required:
      - ingredients
    properties:
      # The array of restricted ingredients
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
        
  GetIngredientsListResponse:
    required:
      - ingredients
    properties:
      # The array of movies
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
              
  GetIngredientResponse:
    required:
      - id
      - name
      - alternatives
    properties:
      id:
        type: number
      name:
        type: string
      alternatives:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
              
  GetIngredientAlternativesResponse:
    required:
      - id
      - name
      - alternatives
    properties:
      id:
        type: number
      name:
        type: string
      alternatives:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            name:
              type: string
              
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
        
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
