swagger: "2.0"
info:
  version: "0.0.1"
  title: Piece-Meal App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: This endpoint returns all users available in the database
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: Add a new user
      operationId: addUser
      # movie info to be stored
      parameters:
        - name: user
          in: body
          description: user object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{user_id}:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: Retrieve a single user by id
      # define the type of response for Success "200" and Error
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: Update a user by id
      operationId: updateUser
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: user
          in: body
          description: user object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a user
      parameters:
        - name: user_id
          description: User id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{user_id}/recipes:
    x-swagger-router-controller: recipes
    get:
      description: get a user's recipes
      operationId: getUserRecipes
      parameters:
        - name: user_id
          type: integer
          in: path
          description: user's id
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new recipe to the user's restrictions
      operationId: addUserRecipe
      parameters:
        - name: user_id
          type: integer
          in: path
          description: user's id
          required: true
        - name: recipe_id
          type: integer
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{user_id}/restrictions:
    x-swagger-router-controller: users
    get:
      description: get a user's dietary restrictions
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserRestrictionsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new ingredient to the user's restrictions
      operationId: addRestriction
      parameters:
        - name: user_id
          type: integer
          in: path
          description: user's id
          required: true
        - name: ingredient_id
          type: integer
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    patch:
      description: add a new ingredient to the user's restrictions
      operationId: updateRestrictions
      parameters:
        - name: user_id
          type: integer
          in: path
          description: user's id
          required: true
        - name: ingredients
          in: body
          description: Json object informations.
          required: true
          schema:
            $ref: '#/definitions/IngredientIds'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete an ingredient
      parameters:
        - name: user_id
          description: User Id
          type: integer
          in: path
          required: true
        - name: request
          description: Request body
          in: body
          required: true
          schema:
            type: object
            required:
              - ingredient_id
            properties:
              ingredient_id:
                description: the ingredient to delete
                type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients:
    x-swagger-router-controller: ingredients
    get:
      description: get the ingredients list
      # define the type of response for Success "200" and Error
      operationId: getIngredientsList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new ingredient to the list
      parameters:
        - name: ingredient
          description: Ingredient
          in: body
          required: true
          schema:
            $ref: "#/definitions/Ingredient"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /recipes:
    x-swagger-router-controller: recipes
    get:
      description: get the recipes list
      operationId: getRecipesList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: add a new recipes
      parameters:
        - name: recipe
          description: Recipe
          in: body
          required: true
          schema:
            $ref: "#/definitions/Recipe"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients/{id}:
    x-swagger-router-controller: ingredients
    get:
      description: get an ingredient
      parameters:
        - name: id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: update an ingredient
      parameters:
        - name: id
          description: Ingredient id
          type: integer
          in: path
          required: true
        - name: ingredient
          description: Ingredient
          in: body
          required: true
          schema:
            $ref: "#/definitions/PatchIngredient"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:

      description: delete an ingredien
      # define the parameters
      parameters:
        - name: id
          description: Ingredient id
          type: number
      description: delete an ingredient
      parameters:
        - name: id
          description: Ingredient id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /ingredients/{id}/alternatives:
    x-swagger-router-controller: ingredients
    get:
      description: get alternatives for an ingredient
      parameters:
        - name: id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientAlternativesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /search/users:
    x-swagger-router-controller: users
    get:
      description: get results from user search
      parameters:
        - name: first_name
          type: string
          in: query
          required: true
        - name: last_name
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersSearchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /search/ingredients:
    x-swagger-router-controller: ingredients
    get:
      description: get results from ingredient search
      parameters:
        - name: name
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientSearchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /search/recipes:
    x-swagger-router-controller: recipes
    get:
      description: get results from recipe search
      parameters:
        - name: name
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipeSearchResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"



  /users/{user_id}/ingredients/{ingredient_id}/verify:
    x-swagger-router-controller: users
    get:
      description: to check if an ingredient is safe for user
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: ingredient_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetIngredientVerifyResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{user_id}/recipes/{recipe_id}/crosscheck:
    x-swagger-router-controller: users
    get:
      description: to find out what ingredients are safe and non-safe in an existing recipe
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: recipe_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRecipeIngredientSafetyResponse"
        default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /users/{user_id}/recipes/{recipe_id}/rating:
    x-swagger-router-controller: users
    get:
      description: to get user's rating for a recipe
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: recipe_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserRecipeRatingResponse"
        default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
    post:
      description: to post/update user's rating
      parameters:
        - name: user_id
          type: integer
          in: path
          required: true
        - name: recipe_id
          in: path
          type: integer
          required: true
        - name: rating
          in: body
          schema:
            type: object
            required:
              - rating
            properties:
              rating:
                description: rating to post/update
                type: number

      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  IngredientIds:
    type: array
    items:
      type: integer

  User:
    type: object
    required:
      - id
      - first_name
      - last_name
      - password
      - email
    properties:
      first_name:
        type: string
        description: user object first name
      last_name:
        type: string
        description: user object last name
      email:
        type: string
        description: user object email
      password:
        type: string
        description: user password
      id:
        type: integer
        description: user id

  PatchIngredient:
    type: object
    properties:
      name:
        type: string
        description: ingredient object name
      tags:
        type: array
        items:
          type: integer
    required:
      - name

  Ingredient:
    type: object
    properties:
      id:
        type: number
        description: ingredient id
      name:
        type: string
        description: ingredient object name
      tags:
        type: array
        items:
          type: integer
    required:
      - name

  Recipe:
    type: object
    properties:
      id:
        type: integer
        description: recipe id
      name:
        type: string
        description: recipe object name
      tags:
        type: array
        items:
          type: integer
    required:
      - name

  GetUserResponse:
    required:
      - id
      - first_name
      - last_name
      - email
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string

  GetUsersResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string

  GetUsersSearchResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            first_name:
              type: string
            last_name:
              type: string

  GetIngredientSearchResponse:
    required:
      - ingredients
    properties:
      # The array of ingredients
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            tags:
              type: array
              items:
                type: string

  GetRecipeSearchResponse:
    required:
      - recipes
    properties:
      # The array of recipes
      recipes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            tags:
              type: array
              items:
                type: string

  GetUserRestrictionsResponse:
    required:
      - ingredients
    properties:
      # The array of restricted ingredients
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

  GetIngredientsListResponse:
    required:
      - ingredients
    properties:
      # The array of ingredients
      ingredients:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

  GetRecipesListResponse:
    required:
      - recipes
    properties:
      recipes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            ingredients:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string

  GetIngredientResponse:
    required:
      - id
      - name
      - alternatives
      - tags
    properties:
      id:
        type: integer
      name:
        type: string
      tags:
        type: array
        items:
          type: string
      alternatives:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string

  GetIngredientAlternativesResponse:
    required:
      - id
      - name
      - alternatives
    properties:
      id:
        type: number
      name:
        type: string
      alternatives:
        type: array
        items:

          type: object
          properties:
            id:
              type: number
            name:
              type: string

          $ref: "#/definitions/Ingredient"

  GetIngredientVerifyResponse:
    type: object
    required:
      - safe
    properties:
      safe:
        type: boolean
        description: "Check whether the ingredient is safe or not"
      alternatives:
        type: array
        description: "the alternatives for the ingredient, if it's not safe."
        items:
          $ref: "#/definitions/Ingredient"

  GetRecipeIngredientSafetyResponse:
    type: array
    items:
      type: object
      required:
        - safe
      properties:
        ingredient_id:
          type: integer
        name:
          type: string
        safe:
          type: boolean
          description: "returns TRUE if it's safe, False if it's not"

  GetUserRecipeRatingResponse:
    required:
      - rating
    properties:
      rating:
        type: number
        description: "User's rating for a recipe"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  GeneralResponse:
    type: object
    properties:
      success:
        type: integer
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description

  # IngredientResponse:
  #   type: object
  #   properties:
  #     success:
  #       type: integer
  #       description: returns 1 if successful
  #     description:
  #       type: object
  #       properties:
  #       description: a short comment
  #   required:
  #     - success
  #     - description
